}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
silhouette_scores <- numeric(10)
for (k in 2:10) {
kmeans_model <- kmeans(df, centers = k)
silhouette_scores[k] <- silhouette(kmeans_model$cluster, dist(df))
}
plot(2:10, silhouette_scores[2:10], type = "b", xlab = "Number of Clusters (K)", ylab = "Silhouette Score")
wss <- numeric(10)
for (k in 1:10) {
pam_result <- pam(data, k = k)
wss[k] <- pam_result$tot.withinss
}
wss <- numeric(10)
for (k in 1:10) {
pam_result <- pam(df, k = k)
wss[k] <- pam_result$tot.withinss
}
wss1 <- numeric(10)
for (k in 1:10) {
pam_result <- pam(df, k = k)
wss1[k] <- pam_result$tot.withinss
}
#PAM
-----
wss1 <- numeric(10)
wss1 <- numeric(10)
for (x in 1:10) {
pam_result <- pam(df, k = x)
wss1[k] <- pam_result$tot.withinss
}
clust<-fviz_nbclust(df,pam,method="wss")+geom_vline(xintercept=3,linetype=2)
clust
clust<-fviz_nbclust(df,pam,method="wss")+geom_vline(xintercept=3,linetype=2)
clust
clust<-fviz_nbclust(df,pam,method="wss")
clust
clust<-fviz_nbclust(df,kmeans,method="wss")+geom_vline(xintercept=3,linetype=2)
clust
clust<-fviz_nbclust(df,pam,method="wss")
clust
clust<-fviz_nbclust(df,pam,method="wss")+geom_vline(xintercept=3,linetype=2)
clust<-fviz_nbclust(df,pam,method="wss")+geom_vline(xintercept=3,linetype=2)
clust
clust<-fviz_nbclust(df,kmeans,method="wss")+geom_vline(xintercept=3,linetype=2)
clust
km<-kmeans(df,centers=3)
km
set.seed(123)
km.res <- kmeans(df, 3, nstart = 10)
print(km.res$centers)
print(km.res$size)
print(km.res$betweenss/km.res$totss)
fviz_cluster(km.res, df, geom = "point",ellipse.type = "norm",repel = TRUE)
dfc['cluster']=as.factor(km.res$cluster)
df['cluster']=as.factor(km.res$cluster)
View(df)
attach(df)
spentplot = ggplot(df, aes(x=cluster,y=total_spent,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
spentplot
spentplot = ggplot(df, aes(x=cluster,y=Spent,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
spentplot
ageplot = ggplot(dfc, aes(x=cluster,y=Age,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
ageplot = ggplot(df, aes(x=cluster,y=Age,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
ageplot
complainplot = ggplot(df, aes(x=cluster,y=Complain,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
complainplot
complainplot = ggplot(df, aes(x=cluster,y=Complain,fill=cluster,ylim=1))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
complainplot
complainplot = ggplot(df, aes(x=cluster,y=Complain,fill=cluster,ylim="1"))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
complainplot
#cluster-complain
complainplot = ggplot(df, aes(x=cluster,y=Income,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
complainplot
incomeplot = ggplot(df, aes(x=cluster,y=Income,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
incomeplot
wpplot = ggplot(df, aes(x=cluster,y=NumWebPurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
wpplot
names(df)
cpplot = ggplot(df, aes(x=cluster,y=NumCatalogPurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
cpplot
#cluster-catalogue purchases
cpplot = ggplot(df, aes(x=cluster,y=NumCatalogPurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
cpplot
spplot = ggplot(df, aes(x=cluster,y=NumStorePurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
spplot
corr_var(df, cluster)
eduplot = ggplot(df, aes(x=cluster,y=Education,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
eduplot
eduplot = ggplot(df, aes(x=cluster,y=Education,fill=cluster))+geom_histogram()
eduplot
eduplot = ggplot(df, aes(x=cluster,y=Education,fill=cluster))+geom_histogram()
eduplot
incomeplot = ggplot(df, aes(x=cluster,y=Income,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
incomeplot
ggplot(df, aes(Income)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ggplot(df, aes(total_spent)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ggplot(df, aes(Spent)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ggplot(df, aes(Aget)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ggplot(df, aes(Age)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ggplot(df, aes(Education)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ggplot(df) +
geom_point(aes(Income,Spent, color = factor(cluster)))
ggplot(df) + geom_bar(aes(cluster, fill = Marital_Status))
mydata<-read.csv("D:/R/car.csv")
ggplot(mydata,aes(x=body_style,y=price,fill=fuel_type))+geom_col()
ggplot(df,aes(x=cluster,fill=Marital_Status))+geom_col()
ggplot(df) + geom_col(aes(cluster, fill = Marital_Status))
ggplot(df) + geom_bar(aes(cluster, fill = Marital_Status))
ggplot(df, aes(Income)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ggplot(df, aes(Marital_Status)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ggplot(df) + geom_bar(aes(cluster, fill = Marital_Status))
ggplot(df) + geom_bar(aes(cluster, type= Marital_Status))
spplot = ggplot(df, aes(x=cluster,y=NumStorePurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
spplot
ggplot(df) + geom_histogram(aes(Age), fill = "darkgreen",color="black")
ggplot(df,aes(x=Income,y=Spent))+geom_point(col="turquoise")
ggplot(df,aes(x=cluster,y=Marital_Status))+geom_point(col="turquoise")
ggplot(mydata,aes(x=body_style,fill=fuel_type))+geom_bar(position = "dodge")
ggplot(df,aes(x=factor(cluster),fill=Marital_Status))+geom_bar(position = "dodge")
ggplot(df,aes(x=Marital_Status,fill=factor(cluster)))+geom_bar(position = "dodge")
levels(Marital_Status)
ggplot(df,aes(x=Education,fill=factor(cluster)))+geom_bar(position = "dodge")
ggplot(df,aes(x=Is_parent,fill=factor(cluster)))+geom_bar(position = "dodge")
ggplot(df,aes(x=Education,fill=factor(cluster)))+geom_bar(position = "dodge")
ggplot(df) +
geom_bar(aes(cluster, fill = factor(children))) +
labs(fill = "children")
ggplot(df) +
geom_bar(aes(cluster, fill = factor(Child))) +
labs(fill = "children")
ggplot(df) +
geom_bar(aes(cluster, fill = Child)) +
labs(fill = "children")
ggplot(df) +
geom_bar(aes(cluster, fill = factor(Child))) +
labs(fill = "children")
corr_var(df, cluster)
df %>%
group_by(cluster) %>%
summarise(complain = sum(Complain)) %>%
ggplot() + geom_bar(aes(cluster, complain), stat = "identity")
ggplot(df,aes(x=Complain,fill=factor(cluster)))+geom_bar(position = "dodge")
ggplot(df,aes(x=Is_parent,fill=factor(cluster)))+geom_bar(position = "dodge")
ggplot(df,aes(x=Complain,fill=factor(cluster)))+geom_bar(position = "dodge")
spentplot = ggplot(df, aes(x=cluster,y=Spent,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
spentplot
ggplot(df, aes(Age)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ageplot = ggplot(df, aes(x=cluster,y=Age,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
ageplot
ggplot(df, aes(Age)) +
geom_histogram(aes(fill = factor(cluster)), color = "white") +
theme(legend.position = "bottom") + labs(fill = "Cluster")
ageplot = ggplot(df, aes(x=cluster,y=Age,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
ageplot
incomeplot = ggplot(df, aes(x=cluster,y=Income,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
incomeplot
wpplot = ggplot(df, aes(x=cluster,y=NumWebPurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
wpplot
count_clusters_no<- df %>%
group_by(cluster) %>%
summarise(count = n())
count_clusters_no
wpplot = ggplot(df, aes(x=cluster,y=NumWebPurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
wpplot
cpplot = ggplot(df, aes(x=cluster,y=NumCatalogPurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
cpplot
spplot = ggplot(df, aes(x=cluster,y=NumStorePurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
spplot
spplot = ggplot(df, aes(x=cluster,y=NumStorePurchases,fill=cluster))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
spplot
ggplot(df) +
geom_point(aes(Income,Spent, color = factor(cluster)))
ggplot(df,aes(x=Marital_Status,fill=factor(cluster)))+geom_bar(position = "dodge")
unique(df$Marital_Status)
ggplot(df,aes(x=Education,fill=factor(cluster)))+geom_bar(position = "dodge")
ggplot(df,aes(x=Is_parent,fill=factor(cluster)))+geom_bar(position = "dodge")
ggplot(df) +
geom_bar(aes(cluster, fill = factor(Child))) +
labs(fill = "children")
df<- read.csv("C:/Users/hp/Downloads/customer_analysis_R/customer_behaviour.csv")
View(df)
library(cluster)
library(tidyverse)
library(Rtsne)
library(factoextra)
library(lares)
df<- read.csv("C:/Users/hp/Downloads/customer_analysis_R/customer_behaviour.csv")
View(df)
dim(df)
df<- read.csv("C:/Users/hp/Downloads/customer_analysis_R/customer_behaviour.csv")
colSums(is.na(df))
df<-na.omit(df)
colSums(is.na(df))
dim(df)
#1.customer age from the birth year
df['Age']= 2021-df$Year_Birth
#2.no of children for the customers
df['Child']=df$Kidhome+df$Teenhome
#3. total amount spent on various items
df['Spent'] = df$MntWines+df$MntFruits+df$MntMeatProducts+df$MntFishProducts+
df$MntSweetProducts+df$MntGoldProds
#4. feature indicating parenthood
df['Is_parent']= ifelse(df$Child >0, 1, 0)
View(df)
#5. Details about previous campaigns
df['accepted_campaigns']=df$AcceptedCmp1+df$AcceptedCmp2+df$AcceptedCmp3+
df$AcceptedCmp4+df$AcceptedCmp5
#data transformation/value replacement
--------------------------------------
#marital status
unique(df$Marital_Status)
count_marital_status<- df %>%
group_by(Marital_Status) %>%
summarise(count = n())
# Count values in Category2 and create a summary dataframe
count_education<- df %>%
group_by(Education) %>%
summarise(count = n())
# Print the summary data frames
print(count_marital_status)
print(count_education)
summary(df)
ggplot(df) + geom_boxplot(aes(Income))
df<- df %>% filter(Income < 600000)
ggplot(df) + geom_histogram(aes(Income), fill = "violet",color = "darkgreen")
ggplot(df) + geom_boxplot(aes(Income))
boxplot(df$Income,main = "customer income",xlab = "Income",ylab = "",
col = "#adcae6",border = "blue
boxplot(df$Income,main = "customer income",xlab = "Income",ylab = "",
#income
ggplot(df) + geom_boxplot(aes(Income))
df<- df %>% filter(Income < 600000)
#age
ggplot(df) + geom_boxplot(aes(Age))
df<- df %>% filter(Age < 100)
summary(df$Age)
summary(df$Income)
boxplot(df$Income,main = "customer income",xlab = "Income",ylab = "",
col = "#adcae6",border = "blue",horizontal = TRUE,notch = TRUE)
ggplot(df) + geom_boxplot(aes(Income))
df<- df %>% filter(Income < 600000)
ggplot(df, aes(x=Education,y=Spent,fill=Education))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
ggplot(df) + geom_boxplot(aes(Income))
ggplot(df) + geom_histogram(aes(Income), fill = "violet",color = "darkgreen")
#bar chart-age
ggplot(df) + geom_histogram(aes(Age), fill = "darkgreen",color="black")
#box plot-income
boxplot(df$Income,main = "customer income",xlab = "Income",ylab = "",
col = "#adcae6",border = "blue",horizontal = TRUE,notch = TRUE)
#scatter plot income-total spent
ggplot(df,aes(x=Income,y=Spent))+geom_point(col="turquoise")
ggplot(df) + geom_boxplot(aes(Income))
df<- df %>% filter(Income < 600000)
ggplot(df) + geom_boxplot(aes(Age))
df<- df %>% filter(Age < 100)
#This dataset contains 29 variables and 2240 observations about different customers.
#People
#ID: Customer's unique identifier
#Year_Birth: Customer's birth year
#Education: Customer's education level
#Marital_Status: Customer's marital status
#Income: Customer's yearly household income
#Kidhome: Number of children in customer's household
#Teenhome: Number of teenagers in customer's household
#Dt_Customer: Date of customer's enrollment with the company
#Recency: Number of days since customer's last purchase
#Complain: 1 if customer complained in the last 2 years, 0 otherwise
#Products
#MntWines: Amount spent on wine in last 2 years
#MntFruits: Amount spent on fruits in last 2 years
#MntMeatProducts: Amount spent on meat in last 2 years
#MntFishProducts: Amount spent on fish in last 2 years
#MntSweetProducts: Amount spent on sweets in last 2 years
#MntGoldProds: Amount spent on gold in last 2 years
#Promotion
#NumDealsPurchases: Number of purchases made with a discount
#AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise
#AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise
#AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise
#AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise
#AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise
#Response: 1 if customer accepted the offer in the last campaign, 0 otherwise
#Place
#NumWebPurchases: Number of purchases made through the company’s web site
#NumCatalogPurchases: Number of purchases made using a catalogue
#NumStorePurchases: Number of purchases made directly in stores
#NumWebVisitsMonth: Number of visits to company’s web site in the last month
library(cluster)
library(tidyverse)
library(Rtsne)
library(factoextra)
library(lares)
df<- read.csv("C:/Users/hp/Downloads/customer_analysis_R/customer_behaviour.csv")
dim(df)
View(df)
#HANDLING MISSING DATA
#----------------------
# Check missing information:
colSums(is.na(df))
#Remove records with missing income:
df<-na.omit(df)
colSums(is.na(df))
dim(df)
#FEATURE ENGINEERING
#--------------------
#adding new features
---------------------
#1.customer age from the birth year
df['Age']= 2021-df$Year_Birth
ggplot(df) + geom_boxplot(aes(Age))
#This dataset contains 29 variables and 2240 observations about different customers.
#People
#ID: Customer's unique identifier
#Year_Birth: Customer's birth year
#Education: Customer's education level
#Marital_Status: Customer's marital status
#Income: Customer's yearly household income
#Kidhome: Number of children in customer's household
#Teenhome: Number of teenagers in customer's household
#Dt_Customer: Date of customer's enrollment with the company
#Recency: Number of days since customer's last purchase
#Complain: 1 if customer complained in the last 2 years, 0 otherwise
#Products
#MntWines: Amount spent on wine in last 2 years
#MntFruits: Amount spent on fruits in last 2 years
#MntMeatProducts: Amount spent on meat in last 2 years
#MntFishProducts: Amount spent on fish in last 2 years
#MntSweetProducts: Amount spent on sweets in last 2 years
#MntGoldProds: Amount spent on gold in last 2 years
#Promotion
#NumDealsPurchases: Number of purchases made with a discount
#AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise
#AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise
#AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise
#AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise
#AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise
#Response: 1 if customer accepted the offer in the last campaign, 0 otherwise
#Place
#NumWebPurchases: Number of purchases made through the company’s web site
#NumCatalogPurchases: Number of purchases made using a catalogue
#NumStorePurchases: Number of purchases made directly in stores
#NumWebVisitsMonth: Number of visits to company’s web site in the last month
library(cluster)
library(tidyverse)
library(Rtsne)
library(factoextra)
library(lares)
df<- read.csv("C:/Users/hp/Downloads/customer_analysis_R/customer_behaviour.csv")
dim(df)
View(df)
#HANDLING MISSING DATA
#----------------------
# Check missing information:
colSums(is.na(df))
#Remove records with missing income:
df<-na.omit(df)
colSums(is.na(df))
dim(df)
#1.customer age from the birth year
df['Age']= 2021-df$Year_Birth
#2.no of children for the customers
df['Child']=df$Kidhome+df$Teenhome
#3. total amount spent on various items
df['Spent'] = df$MntWines+df$MntFruits+df$MntMeatProducts+df$MntFishProducts+
df$MntSweetProducts+df$MntGoldProds
#4. feature indicating parenthood
df['Is_parent']= ifelse(df$Child >0, 1, 0)
View(df)
#5. Details about previous campaigns
df['accepted_campaigns']=df$AcceptedCmp1+df$AcceptedCmp2+df$AcceptedCmp3+
df$AcceptedCmp4+df$AcceptedCmp5
#data transformation/value replacement
--------------------------------------
#marital status
unique(df$Marital_Status)
names(df)
df=df[c(-1,-2,-6,-7,-8,-21,-22,-23,-24,-25,-27,-28)]
names(df)
dim(df)
count_marital_status<- df %>%
group_by(Marital_Status) %>%
summarise(count = n())
# Count values in Category2 and create a summary dataframe
count_education<- df %>%
group_by(Education) %>%
summarise(count = n())
# Print the summary data frames
print(count_marital_status)
print(count_education)
ggplot(df) + geom_boxplot(aes(Age))
df<- df %>% filter(Age < 100)
ggplot(df) + geom_histogram(aes(Income), fill = "violet",color = "darkgreen")
ggplot(df) + geom_boxplot(aes(Income))
df<- df %>% filter(Income < 600000)
boxplot(df$Income,main = "customer income",xlab = "Income",ylab = "",
col = "#adcae6",border = "blue",horizontal = TRUE,notch = TRUE)
ggplot(df) + geom_histogram(aes(Income), fill = "violet",color = "darkgreen")
ggplot(df) + geom_histogram(aes(Age), fill = "darkgreen",color="black")
boxplot(df$Income,main = "customer income",xlab = "Income",ylab = "",
col = "#adcae6",border = "blue",horizontal = TRUE,notch = TRUE)
ggplot(df,aes(x=Income,y=Spent))+geom_point(col="turquoise")
hist(df$Spent,50,xlab = "Total Spent",col="#adcae6")
ggplot(df, aes(x=Education,y=Spent,fill=Education))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
unique(df$Marital_Status)
df<- df%>% mutate(Marital_Status = replace(Marital_Status, Marital_Status == "YOLO" |
Marital_Status == "Absurd" | Marital_Status == "Alone"|
Marital_Status == "Divorced" | Marital_Status == "Widow", "Single"))
df<-df %>% mutate(Marital_Status = replace(Marital_Status, Marital_Status == "Together" |
Marital_Status == "Married", "Couple"))
unique(df$Marital_Status)
#education
unique(df$Education)
df <- df %>% mutate(Education = replace(Education, Education == "Graduation" | Education == "PhD" |
Education == "Master", "Graduate"))
df<- df %>% mutate(Education = replace(Education, Education == "Basic" |
Education == "2n Cycle", "non-Graduate"))
unique(df$Education)
hist(df$Spent,50,xlab = "Total Spent",col="#adcae6")
ggplot(df, aes(x=Education,y=Spent,fill=Education))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
ggplot(df, aes(x=Marital_Status,y=Spent,fill=Marital_Status))+geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=2, notch=T)
corr_var(df, Income, top = 12)
corr_var(df, Spent, top = 12)
ggplot(df) + geom_boxplot(aes(factor(Complain),Age))
ggplot(df) + geom_boxplot(aes(factor(Complain), Income))
ggplot(df) + geom_boxplot(aes(factor(Complain),Child))
